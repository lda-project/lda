[tool.poetry]
name = "lda"
version = "3.0.0"
description = "Topic modeling with latent Dirichlet allocation"
authors = ["lda developers <lda-users@googlegroups.com>"]
license = "MPL 2.0"
readme = "README.rst"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: C",
    "Programming Language :: Cython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
]
include = [
    { path = "meson.build", format = "sdist" },
    { path = "lda/*.so", format = "wheel" },
    { path = "lda/*.pyd", format = "wheel"},
]

[tool.poetry.build]
script = "build.py"

[tool.poetry.dependencies]
python = ">=3.9,<=3.12"
numpy = ">=1.13.0,<2.0"

[tool.poetry.group.dev.dependencies]
cython = "^3.0.3"
scipy = "^1.11.3"
sphinx = "^7.2.6"
sphinx-autoapi = "^3.0.0"
hacking = "^6.0.1"
coverage = "^7.3.2"
discover = "^0.4.0"
python-subunit = "^1.4.3"
oslosphinx = "^4.18.0"
oslotest = "^4.5.0"
testrepository = "^0.0.20"
testscenarios = "^0.5.0"
testtools = "^2.6.0"
numpydoc = "^1.6.0"
sphinx-rtd-theme = "^1.3.0"
flake8 = "^5.0.1"

[tool.poetry.group.build.dependencies]
meson-python = "^0.14.0"
cython = "^3.0.3"
ninja = "^1.11.1.1"
cibuildwheel = "^2.16.2"

[tool.cibuildwheel]
build = "cp39-* cp310-* cp311-* cp312-*"
skip = ["pp*", "*i686", "*win32"]
test-requires = ["oslotest", "scipy", "setuptools"]
test-command = "python -m unittest discover -s {project}/lda/tests"

[build-system]
requires = ["poetry-core", "cython", "meson-python", "ninja"]
build-backend = "poetry.core.masonry.api"
